Index: SUSYTools/Root/SUSYCrossSection.cxx
===================================================================
1a2
> 
Index: SUSYTools/SUSYTools/SUSYCrossSection.h
===================================================================
3a4,5
> #include "SUSYTools/McUtils.h"
> 
10d11
< #include "SUSYTools/SUSYObjDef.h"
71c72
<   Process process(int id, int pdgId1, int pdgId2) const { return process(id, SUSYObjDef::finalState(pdgId1, pdgId2)); }
---
>   Process process(int id, int pdgId1, int pdgId2) const { return process(id, susy::finalState(pdgId1, pdgId2)); }
78c79
<   float xsectTimesEff(int id, int pdgId1, int pdgId2) const { return xsectTimesEff(id, SUSYObjDef::finalState(pdgId1, pdgId2)); }
---
>   float xsectTimesEff(int id, int pdgId1, int pdgId2) const { return xsectTimesEff(id, susy::finalState(pdgId1, pdgId2)); }
80c81
<   float rawxsect(int id, int pdgId1, int pdgId2) const { return rawxsect(id, SUSYObjDef::finalState(pdgId1, pdgId2)); }
---
>   float rawxsect(int id, int pdgId1, int pdgId2) const { return rawxsect(id, susy::finalState(pdgId1, pdgId2)); }
82c83
<   float kfactor(int id, int pdgId1, int pdgId2) const { return kfactor(id, SUSYObjDef::finalState(pdgId1, pdgId2)); }
---
>   float kfactor(int id, int pdgId1, int pdgId2) const { return kfactor(id, susy::finalState(pdgId1, pdgId2)); }
84c85
<   float efficiency(int id, int pdgId1, int pdgId2) const { return efficiency(id, SUSYObjDef::finalState(pdgId1, pdgId2)); }
---
>   float efficiency(int id, int pdgId1, int pdgId2) const { return efficiency(id, susy::finalState(pdgId1, pdgId2)); }
86c87
<   float rel_uncertainty(int id, int pdgId1, int pdgId2) const { return rel_uncertainty(id, SUSYObjDef::finalState(pdgId1, pdgId2)); }
---
>   float rel_uncertainty(int id, int pdgId1, int pdgId2) const { return rel_uncertainty(id, susy::finalState(pdgId1, pdgId2)); }
88c89
<   float sumweight(int id, int pdgId1, int pdgId2) const { return sumweight(id, SUSYObjDef::finalState(pdgId1, pdgId2)); }
---
>   float sumweight(int id, int pdgId1, int pdgId2) const { return sumweight(id, susy::finalState(pdgId1, pdgId2)); }
